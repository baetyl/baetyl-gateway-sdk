# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import driver_pb2 as driver__pb2


class DriverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDriverInfo = channel.unary_unary(
                '/proto.Driver/GetDriverInfo',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.SetConfig = channel.unary_unary(
                '/proto.Driver/SetConfig',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.Setup = channel.unary_unary(
                '/proto.Driver/Setup',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.Start = channel.unary_unary(
                '/proto.Driver/Start',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.Restart = channel.unary_unary(
                '/proto.Driver/Restart',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.Stop = channel.unary_unary(
                '/proto.Driver/Stop',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.Get = channel.unary_unary(
                '/proto.Driver/Get',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.Set = channel.unary_unary(
                '/proto.Driver/Set',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )


class DriverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDriverInfo(self, request, context):
        """宿主（client） --> 驱动（server）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Setup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Restart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DriverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDriverInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDriverInfo,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'Setup': grpc.unary_unary_rpc_method_handler(
                    servicer.Setup,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'Restart': grpc.unary_unary_rpc_method_handler(
                    servicer.Restart,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Driver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Driver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDriverInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/GetDriverInfo',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/SetConfig',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Setup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/Setup',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/Start',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Restart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/Restart',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/Stop',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/Get',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Driver/Set',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReportStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Post = channel.unary_unary(
                '/proto.Report/Post',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )
        self.State = channel.unary_unary(
                '/proto.Report/State',
                request_serializer=driver__pb2.RequestArgs.SerializeToString,
                response_deserializer=driver__pb2.ResponseResult.FromString,
                )


class ReportServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Post(self, request, context):
        """驱动（client） --> 宿主（server）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def State(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReportServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Post': grpc.unary_unary_rpc_method_handler(
                    servicer.Post,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
            'State': grpc.unary_unary_rpc_method_handler(
                    servicer.State,
                    request_deserializer=driver__pb2.RequestArgs.FromString,
                    response_serializer=driver__pb2.ResponseResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Report', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Report(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Report/Post',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def State(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Report/State',
            driver__pb2.RequestArgs.SerializeToString,
            driver__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
